version: '3'

services:
  
  gateway-db:
    image: mongo:latest
    container_name: gateway-db
    restart: always
    networks:
      - orchestrator-saga
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    ports:
      - 27010:27010
  
  product-db:
    image: mongo:latest
    container_name: product-db
    restart: always
    networks:
      - orchestrator-saga
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    ports:
      - 27011:27011
  
  price-db:
   image: mongo:latest
    container_name: price-db
    restart: always
    networks:
      - orchestrator-saga
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    ports:
      - 27012:27012
  
  user-db:
    image: mongo:latest
    container_name: user-db
    restart: always
    networks:
      - orchestrator-saga
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    ports:
      - 27013:27013

  kafka:
    container_name: kafka
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    networks:
      - orchestrator-saga
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data

  redpanda-console:
    container_name: redpanda
    image: docker.redpanda.com/vectorized/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    ports:
      - "8081:8080"
    networks:
      - orchestrator-saga
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:29092"]
    depends_on:
      - "kafka"

  gateway-service:
    build: './gateway-service'
    container_name: gateway-service
    depends_on:
      - gateway-db
      - kafka
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=kafka:29092
      - MONGO_DB_URI=mongodb://admin:123456@gateway-db:27010
    ports:
      - 3000:3000

  auth-service:
    build: './auth-service'
    container_name: auth-service
    depends_on:
      - kafka
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=kafka:29092
    ports:
      - 8090:8090

  orchestrator-service:
    build: './orchestrator-service'
    container_name: orchestrator-service
    depends_on:
      - kafka
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=kafka:29092
    ports:
      - 8085:8085

  product-service:
    build: './product-service'
    container_name: product-service
    depends_on:
      - product-db
      - kafka
    networks:
      - orchestrator-saga
    environment:
     - KAFKA_BROKER=kafka:29092
     - MONGO_DB_URI=mongodb://admin:123456@product-db:27011
    ports:
      - 8093:8093

  price-service:
    build: './price-service'
    container_name: price-service
    depends_on:
      - price-db
      - kafka
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=kafka:29092
      - MONGO_DB_URI=mongodb://admin:123456@price-db:27012
    ports:
      - 8091:8091

  user-service:
    build: './user-service'
    container_name: user-service
    depends_on:
      - user-db
      - kafka
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=kafka:29092
      - MONGO_DB_URI=mongodb://admin:123456@user-db:27013
    ports:
      - 8092:8092

networks:
  orchestrator-saga:
    driver: bridge
